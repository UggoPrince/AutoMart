{"version":3,"sources":["../../server/index.js"],"names":["app","use","get","req","res","setHeader","send","swaggerSpec","swaggerUi","serve","setup","status","bodyParser","json","type","urlencoded","extended","usersRouter","carsRouter","ordersRouter","flagsRouter"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;AAYA;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAAiB;;AACjBD,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;AAExB;;AACAD,GAAG,CAACE,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAASC,sBAAT;AACD,CAHD;AAIAP,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA4BO,6BAAUC,KAAtC,EAA6CD,6BAAUE,KAAV,CAAgBH,sBAAhB,CAA7C,E,CAEA;;AACAP,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB,sCACnB,gDADmB,GAEnB,8EAFmB,GAGnB,sDAHF;AAID,CALD,E,CAOA;;AACAN,GAAG,CAACC,GAAJ,CAAQW,uBAAWC,IAAX,EAAR;AACAb,GAAG,CAACC,GAAJ,CAAQW,uBAAWC,IAAX,CAAgB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAAR;AACAd,GAAG,CAACC,GAAJ,CAAQW,uBAAWG,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAhB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBgB,uBAApB;AACAjB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBiB,sBAApB;AACAlB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBkB,wBAApB;AACAnB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBmB,uBAApB;AAEApB,GAAG,CAACC,GAAJ,CAAQ,UAACE,GAAD,EAAMC,GAAN,EAAc;AACpBA,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,WAArB;AACD,CAFD;eAIeb,G","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport express from 'express';\r\nimport logger from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport cors from 'cors';\r\nimport swaggerSpec from './swaggerDocs/config/swaggerDef';\r\nimport usersRouter from './routes/usersRoutes';\r\nimport carsRouter from './routes/carsRoutes';\r\nimport ordersRouter from './routes/ordersRoutes';\r\nimport flagsRouter from './routes/flagsRoutes';\r\n\r\n// Set up express app\r\nconst app = express();\r\n\r\napp.use(cors()); // for cross origin requests\r\napp.use(logger('dev')); // Log request to console\r\n\r\n// produce api documentation\r\napp.get('/swagger.json', (req, res) => {\r\n  res.setHeader('Content-Type', 'application/json');\r\n  res.send(swaggerSpec);\r\n});\r\napp.use('/api/v1/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\r\n\r\n// HOME PAGE\r\napp.get('/', (req, res) => {\r\n  res.status(200).send('<h1>Welcome to AutoMart API.</h1>'\r\n  + '<span>Here is the documentation of version 1.0'\r\n  + ' <a href=\"https://automarter.herokuapp.com/api/v1/api-docs/\" target=\"blank\">'\r\n  + 'automarter.herokuapp.com/api/v1/api-docs/</a></span>');\r\n});\r\n\r\n// Parse incoming request data\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.json({ type: 'application/json' }));\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\napp.use('/api/v1/', usersRouter);\r\napp.use('/api/v1/', carsRouter);\r\napp.use('/api/v1/', ordersRouter);\r\napp.use('/api/v1/', flagsRouter);\r\n\r\napp.use((req, res) => {\r\n  res.status(404).json('Not Found');\r\n});\r\n\r\nexport default app;\r\n"],"file":"index.js"}