{"version":3,"sources":["../../../server/controllers/CarsController.js"],"names":["CarsController","req","res","reqBody","body","car_photo","img_url","str","image","files","Cars","postAdvert","result","status","send","data","rows","car_id","params","updateStatus","updatePrice","getCarById","rQuery","query","qLength","getAllCars","getCarsByStatusAvailable","owner","getCarByOwner","token","id","state","getCarsByStatusAndState","manufacturer","getCarsByStatusAndManufacturer","getCarsByStatusAndPriceRange","min_price","max_price","deleteAdvert"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable camelcase */\n\nimport Cars from '../models/Cars';\n\nclass CarsController {\n  async addCar(req, res) {\n    const reqBody = req.body;\n    let car_photo = '';\n    if (req.body.img_url) {\n      car_photo = { str: true, image: req.body.img_url };\n    } else {\n      car_photo = { str: false, image: req.files };\n    }\n    const result = await Cars.postAdvert(reqBody, car_photo);\n    res.status(201).send({\n      status: 201,\n      data: result.rows[0],\n    });\n  }\n\n  async updateCarStatus(req, res) {\n    const reqBody = req.body;\n    reqBody.car_id = req.params.car_id;\n    const result = await Cars.updateStatus(reqBody);\n    res.status(200).send({\n      status: 200,\n      data: result.rows[0],\n    });\n  }\n\n  async updateCarPrice(req, res) {\n    const reqBody = req.body;\n    reqBody.car_id = req.params.car_id;\n    const result = await Cars.updatePrice(reqBody);\n    res.status(200).send({\n      status: 200,\n      data: result.rows[0],\n    });\n  }\n\n  async getSpecificCar(req, res) {\n    const { car_id } = req.params;\n    const result = await Cars.getCarById(car_id);\n    res.status(200).send({\n      status: 200,\n      data: result.rows[0],\n    });\n  }\n\n  async getCars(req, res) {\n    const rQuery = req.query;\n    if (req.qLength === 0) {\n      const result = await Cars.getAllCars();\n      res.status(200).send({\n        status: 200,\n        data: result.rows,\n      });\n    } else if (req.qLength === 1 && rQuery.status) {\n      const result = await Cars.getCarsByStatusAvailable();\n      res.status(200).send({\n        status: 200,\n        data: result.rows,\n      });\n    } else if (req.qLength === 1 && rQuery.owner) {\n      const result = await Cars.getCarByOwner(req.token.id);\n      res.status(200).send({\n        status: 200,\n        data: result.rows,\n      });\n    } else if (req.qLength === 2) {\n      let result = '';\n      if (rQuery.state) { result = await Cars.getCarsByStatusAndState('state', rQuery.state); }\n      if (rQuery.manufacturer) {\n        result = await Cars.getCarsByStatusAndManufacturer('manufacturer', rQuery.manufacturer);\n      }\n      res.status(200).send({\n        status: 200,\n        data: result.rows,\n      });\n    } else if (req.qLength === 3) {\n      const result = await Cars.getCarsByStatusAndPriceRange(rQuery.min_price, rQuery.max_price);\n      res.status(200).send({\n        status: 200,\n        data: result.rows,\n      });\n    }\n  }\n\n  async deleteCar(req, res) {\n    const { car_id } = req.params;\n    await Cars.deleteAdvert(car_id);\n    res.status(200).send({\n      status: 200,\n      data: 'Car Ad successfully deleted',\n    });\n  }\n}\n\nexport default new CarsController();\n"],"file":"CarsController.js"}