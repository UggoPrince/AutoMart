{"version":3,"sources":["../../../server/controllers/CarsController.js"],"names":["CarsController","req","res","reqBody","body","carPhoto","files","Cars","postAdvert","result","status","send","data","rows","carId","params","car_id","updateStatus","updatePrice","getCarById","rQuery","query","qLength","getAllCars","getCarsByStatusAvailable","owner","getCarByOwner","token","id","state","getCarsByStatusAndState","manufacturer","getCarsByStatusAndManufacturer","getCarsByStatusAndPriceRange","min_price","max_price","deleteAdvert"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\nimport Cars from '../models/Cars';\r\n\r\nclass CarsController {\r\n  async addCar(req, res) {\r\n    const reqBody = req.body;\r\n    const carPhoto = req.files;\r\n\r\n    const result = await Cars.postAdvert(reqBody, carPhoto);\r\n    res.status(201).send({\r\n      status: 201,\r\n      data: result.rows[0],\r\n    });\r\n  }\r\n\r\n  async updateCarStatus(req, res) {\r\n    const reqBody = req.body;\r\n    reqBody.carId = req.params.car_id;\r\n    const result = await Cars.updateStatus(reqBody);\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: result.rows[0],\r\n    });\r\n  }\r\n\r\n  async updateCarPrice(req, res) {\r\n    const reqBody = req.body;\r\n    reqBody.carId = req.params.car_id;\r\n    const result = await Cars.updatePrice(reqBody);\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: result.rows[0],\r\n    });\r\n  }\r\n\r\n  async getSpecificCar(req, res) {\r\n    const carId = req.params.car_id;\r\n    const result = await Cars.getCarById(carId);\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: result.rows[0],\r\n    });\r\n  }\r\n\r\n  async getCars(req, res) {\r\n    const rQuery = req.query;\r\n    if (req.qLength === 0) {\r\n      const result = await Cars.getAllCars();\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows,\r\n      });\r\n    } else if (req.qLength === 1 && rQuery.status) {\r\n      const result = await Cars.getCarsByStatusAvailable();\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows,\r\n      });\r\n    } else if (req.qLength === 1 && rQuery.owner) {\r\n      const result = await Cars.getCarByOwner(req.token.id);\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows,\r\n      });\r\n    } else if (req.qLength === 2) {\r\n      let result = '';\r\n      if (rQuery.state) { result = await Cars.getCarsByStatusAndState('state', rQuery.state); }\r\n      if (rQuery.manufacturer) {\r\n        result = await Cars.getCarsByStatusAndManufacturer('manufacturer', rQuery.manufacturer);\r\n      }\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows,\r\n      });\r\n    } else if (req.qLength === 3) {\r\n      const result = await Cars.getCarsByStatusAndPriceRange(rQuery.min_price, rQuery.max_price);\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteCar(req, res) {\r\n    const carId = req.params.car_id;\r\n    await Cars.deleteAdvert(carId);\r\n    res.status(200).send({\r\n      status: 200,\r\n      data: 'Car Ad successfully deleted',\r\n    });\r\n  }\r\n}\r\n\r\nexport default new CarsController();\r\n"],"file":"CarsController.js"}