{"version":3,"sources":["../../../server/controllers/OrdersController.js"],"names":["OrdersController","req","res","reqBody","body","Orders","makeOrder","result","rows","price_offered","amount","status","send","data","order_id","params","updatePrice","id","car_id","old_price_offered","old_amount","new_price_offered","rQuery","query","getOrderByBuyer","buyer"],"mappings":";;;;;;;AAEA;;;;;;;;;;;;;;IAEMA,gB;;;;;;;;;;;;+CACoBC,G,EAAKC,G;;;;;;AACrBC,gBAAAA,O,GAAUF,GAAG,CAACG,I;;uBACCC,mBAAOC,SAAP,CAAiBH,OAAjB,C;;;AAAfI,gBAAAA,M;AACNA,gBAAAA,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeC,aAAf,GAA+BF,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeE,MAA9C;AACA,uBAAOH,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeE,MAAtB;AACAR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAAA,MAAM,EAAE,GADW;AAEnBE,kBAAAA,IAAI,EAAEN,MAAM,CAACC,IAAP,CAAY,CAAZ;AAFa,iBAArB;;;;;;;;;;;;;;;;;;;;;gDAMqBP,G,EAAKC,G;;;;;;;AACpBC,gBAAAA,O,GAAUF,GAAG,CAACG,I;AACpBD,gBAAAA,OAAO,CAACW,QAAR,GAAmBb,GAAG,CAACc,MAAJ,CAAWD,QAA9B;;uBACqBT,mBAAOW,WAAP,CAAmBb,OAAnB,C;;;AAAfI,gBAAAA,M;gCAGFA,MAAM,CAACC,IAAP,CAAY,CAAZ,C,EADFS,E,iBAAAA,E,EAAIC,M,iBAAAA,M,EAAQP,M,iBAAAA,M,EAAQD,M,iBAAAA,M;AAEtBH,gBAAAA,MAAM,CAACC,IAAP,CAAY,CAAZ,IAAiB;AACfS,kBAAAA,EAAE,EAAFA,EADe;AACXC,kBAAAA,MAAM,EAANA,MADW;AACHP,kBAAAA,MAAM,EAANA,MADG;AACKQ,kBAAAA,iBAAiB,EAAEhB,OAAO,CAACiB,UADhC;AAC4CC,kBAAAA,iBAAiB,EAAEX;AAD/D,iBAAjB;AAGAR,gBAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAAA,MAAM,EAAE,GADW;AAEnBE,kBAAAA,IAAI,EAAEN,MAAM,CAACC,IAAP,CAAY,CAAZ;AAFa,iBAArB;;;;;;;;;;;;;;;;;;;;;gDAMcP,G,EAAKC,G;;;;;;AACboB,gBAAAA,M,GAASrB,GAAG,CAACsB,K;;uBACElB,mBAAOmB,eAAP,CAAuBF,MAAM,CAACG,KAA9B,C;;;AAAflB,gBAAAA,M;AACNL,gBAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAAA,MAAM,EAAE,GADW;AAEnBE,kBAAAA,IAAI,EAAEN,MAAM,CAACC;AAFM,iBAArB;;;;;;;;;;;;;;;;;;;;;eAOW,IAAIR,gBAAJ,E","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable camelcase */\nimport Orders from '../models/Orders';\n\nclass OrdersController {\n  async makePurchaseOrder(req, res) {\n    const reqBody = req.body;\n    const result = await Orders.makeOrder(reqBody);\n    result.rows[0].price_offered = result.rows[0].amount;\n    delete result.rows[0].amount;\n    res.status(201).send({\n      status: 201,\n      data: result.rows[0],\n    });\n  }\n\n  async updateOrderPrice(req, res) {\n    const reqBody = req.body;\n    reqBody.order_id = req.params.order_id;\n    const result = await Orders.updatePrice(reqBody);\n    const {\n      id, car_id, status, amount,\n    } = result.rows[0];\n    result.rows[0] = {\n      id, car_id, status, old_price_offered: reqBody.old_amount, new_price_offered: amount,\n    };\n    res.status(200).send({\n      status: 200,\n      data: result.rows[0],\n    });\n  }\n\n  async getOrders(req, res) {\n    const rQuery = req.query;\n    const result = await Orders.getOrderByBuyer(rQuery.buyer);\n    res.status(200).send({\n      status: 200,\n      data: result.rows,\n    });\n  }\n}\n\nexport default new OrdersController();\n"],"file":"OrdersController.js"}