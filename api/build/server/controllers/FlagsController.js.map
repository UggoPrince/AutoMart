{"version":3,"sources":["../../../server/controllers/FlagsController.js"],"names":["FlagsController","req","res","body","carId","reason","description","validator","Validator","validFlagReq","validateReportAdvertFields","error","status","send","data","carsService","getCarById","parseInt","exist","report","flagsService"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;;;;;IAEMA,e;;;;;;;;;iCACSC,G,EAAKC,G,EAAK;AAAA,sBACkBD,GAAG,CAACE,IADtB;AAAA,UACbC,KADa,aACbA,KADa;AAAA,UACNC,MADM,aACNA,MADM;AAAA,UACEC,WADF,aACEA,WADF;AAErB,UAAMC,SAAS,GAAG,IAAIC,wBAAJ,EAAlB;AACA,UAAMC,YAAY,GAAGF,SAAS,CAACG,0BAAV,CAAqCN,KAArC,EAA4CC,MAA5C,EAAoDC,WAApD,CAArB;;AACA,UAAIG,YAAY,CAACE,KAAjB,EAAwB;AACtBT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,UAAAA,MAAM,EAAE,GADW;AAEnBD,UAAAA,KAAK,EAAEF,YAAY,CAACK;AAFD,SAArB;AAID,OALD,MAKO,IAAI,CAACC,wBAAYC,UAAZ,CAAuBC,QAAQ,CAACb,KAAD,EAAQ,EAAR,CAA/B,EAA4Cc,KAAjD,EAAwD;AAC7DhB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,UAAAA,MAAM,EAAE,GADW;AAEnBD,UAAAA,KAAK,EAAE;AAFY,SAArB;AAID,OALM,MAKA;AACL,YAAMQ,MAAM,GAAGC,yBAAaD,MAAb,CAAoBf,KAApB,EAA2BC,MAA3B,EAAmCC,WAAnC,CAAf;;AACAJ,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,UAAAA,MAAM,EAAE,GADW;AAEnBE,UAAAA,IAAI,EAAEK;AAFa,SAArB;AAID;AACF;;;;;;eAGY,IAAInB,eAAJ,E","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\nimport flagsService from '../services/FlagsService';\r\nimport carsService from '../services/CarsService';\r\nimport Validator from '../helpers/ValidateFlag';\r\n\r\nclass FlagsController {\r\n  reportAdvert(req, res) {\r\n    const { carId, reason, description } = req.body;\r\n    const validator = new Validator();\r\n    const validFlagReq = validator.validateReportAdvertFields(carId, reason, description);\r\n    if (validFlagReq.error) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: validFlagReq.data,\r\n      });\r\n    } else if (!carsService.getCarById(parseInt(carId, 10)).exist) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: 'Invalid carId. There is no car with this id.',\r\n      });\r\n    } else {\r\n      const report = flagsService.report(carId, reason, description);\r\n      res.status(201).send({\r\n        status: 201,\r\n        data: report,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default new FlagsController();\r\n"],"file":"FlagsController.js"}