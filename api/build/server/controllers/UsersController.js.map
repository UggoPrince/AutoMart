{"version":3,"sources":["../../../server/controllers/UsersController.js"],"names":["UsersController","req","res","reqBody","body","isAdmin","email","Users","signup","result","name","detail","status","send","error","token","prepareToken","rows","id","first_name","last_name","address","phone_number","is_admin","data","signin","rowCount","password","userData","tokenData","JWT","signToken"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\nimport Users from '../models/Users';\r\nimport JWT from '../authentication/JWT';\r\nimport {\r\n  errorNoAccount,\r\n  errorInvalidEmailPass,\r\n  errorEmailDuplicate,\r\n} from '../helpers/errorHandlers';\r\n\r\nclass UsersController {\r\n  async addUser(req, res) {\r\n    const reqBody = req.body;\r\n    reqBody.isAdmin = false;\r\n    if (reqBody.email === 'johndoe@gmail.com'\r\n    || reqBody.email === 'admin@gmail.com'\r\n    || reqBody.email === 'bestadmin@yahoo.com') {\r\n      reqBody.isAdmin = true;\r\n    }\r\n\r\n    const result = await Users.signup(reqBody);\r\n    if (result.name\r\n      && result.name === 'error'\r\n      && result.detail === `Key (email)=(${reqBody.email}) already exists.`) {\r\n      res.status(400).send({\r\n        status: 400,\r\n        error: errorEmailDuplicate(),\r\n      });\r\n    } else {\r\n      const token = UsersController.prepareToken(result.rows[0]);\r\n      const {\r\n        // eslint-disable-next-line camelcase\r\n        id, first_name, last_name, email, address, phone_number, is_admin,\r\n      } = result.rows[0];\r\n      result.rows[0] = {\r\n        token, id, first_name, last_name, email, address, phone_number, is_admin,\r\n      };\r\n      res.status(201).send({\r\n        status: 201,\r\n        data: result.rows[0],\r\n      });\r\n    }\r\n  }\r\n\r\n  async getUser(req, res) {\r\n    const reqBody = req.body;\r\n    const result = await Users.signin(reqBody);\r\n    if (result.rowCount === 0) {\r\n      res.status(400).send({\r\n        status: 400,\r\n        error: errorNoAccount(),\r\n      });\r\n    } else if (result.rows[0].password !== reqBody.password) {\r\n      res.status(400).send({\r\n        status: 400,\r\n        error: errorInvalidEmailPass(),\r\n      });\r\n    } else {\r\n      const token = UsersController.prepareToken(result.rows[0]);\r\n      const {\r\n        // eslint-disable-next-line camelcase\r\n        id, first_name, last_name, email, address, phone_number, is_admin,\r\n      } = result.rows[0];\r\n      result.rows[0] = {\r\n        token, id, first_name, last_name, email, address, phone_number, is_admin,\r\n      };\r\n      res.status(200).send({\r\n        status: 200,\r\n        data: result.rows[0],\r\n      });\r\n    }\r\n  }\r\n\r\n  static prepareToken(userData) {\r\n    const tokenData = {\r\n      id: userData.id,\r\n      email: userData.email,\r\n      isAdmin: userData.is_admin,\r\n    };\r\n    const token = JWT.signToken(tokenData);\r\n    return token;\r\n  }\r\n}\r\n\r\nexport default new UsersController();\r\n"],"file":"UsersController.js"}