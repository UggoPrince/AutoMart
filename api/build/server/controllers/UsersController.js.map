{"version":3,"sources":["../../../server/controllers/UsersController.js"],"names":["UsersController","req","res","body","email","password","validator","Validator","validUserReq","validateSigninFields","error","status","send","data","usersService","emailExist","userData","signin","valid","user","firstname","lastname","address","phoneNumber","validateSignupFields","addedUser","signup"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable class-methods-use-this */\r\nimport usersService from '../services/UsersService';\r\nimport Validator from '../helpers/ValidateUser';\r\n\r\nclass UsersController {\r\n  getUser(req, res) {\r\n    const {\r\n      email,\r\n      password,\r\n    } = req.body;\r\n    const validator = new Validator();\r\n    const validUserReq = validator.validateSigninFields(email, password);\r\n    if (validUserReq.error) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: validUserReq.data,\r\n      });\r\n    } else if (!usersService.emailExist(email)) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: 'You don\\'t have an account. Sign up now!',\r\n      });\r\n    } else {\r\n      const userData = usersService.signin(email, password);\r\n      if (userData.valid) {\r\n        res.status(200).send({\r\n          status: 200,\r\n          data: userData.user.data,\r\n        });\r\n      } else {\r\n        res.status(404).send({\r\n          status: 404,\r\n          error: 'Your email/password is incorrect.',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  addUser(req, res) {\r\n    const {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      password,\r\n      address,\r\n      phoneNumber,\r\n    } = req.body;\r\n\r\n    const validator = new Validator();\r\n    const validUserReq = validator.validateSignupFields(\r\n      firstname, lastname, email, password, address, phoneNumber,\r\n    );\r\n    if (validUserReq.error) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: validUserReq.data,\r\n      });\r\n    } else if (usersService.emailExist(email)) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: 'You already have an account. Sign in.',\r\n      });\r\n    } else {\r\n      const addedUser = usersService.signup(\r\n        firstname, lastname, email, password, address, phoneNumber,\r\n      );\r\n      res.status(201).send({\r\n        status: 201,\r\n        data: addedUser.data,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UsersController();\r\n"],"file":"UsersController.js"}