{"version":3,"sources":["../../../server/routes/carsRoutes.js"],"names":["Router","express","multipartMiddleware","post","authenticate","validateCreateAdvert","carsControllers","addCar","patch","validateUpdateCarStatus","updateCarStatus","validateUpdateCarPrice","updateCarPrice","get","validateViewACar","getSpecificCar","validateViewCars","getCars","validateDeleteCar","deleteCar"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AAQA;;;;AAZA;AAcA,IAAMA,MAAM,GAAGC,oBAAQD,MAAR,EAAf;;AACA,IAAME,mBAAmB,GAAG,oCAA5B,C,CAEA;;AACAF,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB,CAACC,0BAAD,EAAeF,mBAAf,EAAoCG,oCAApC,CAApB,EAA+EC,2BAAgBC,MAA/F,E,CACA;;AACAP,MAAM,CAACQ,KAAP,CAAa,qBAAb,EAAoC,CAACJ,0BAAD,EAAeK,uCAAf,CAApC,EAA6EH,2BAAgBI,eAA7F,E,CACA;;AACAV,MAAM,CAACQ,KAAP,CAAa,oBAAb,EAAmC,CAACJ,0BAAD,EAAeO,sCAAf,CAAnC,EAA2EL,2BAAgBM,cAA3F,E,CACA;;AACAZ,MAAM,CAACa,GAAP,CAAW,cAAX,EAA2B,CAACT,0BAAD,EAAeU,gCAAf,CAA3B,EAA6DR,2BAAgBS,cAA7E,E,CACA;;AACAf,MAAM,CAACa,GAAP,CAAW,MAAX,EAAmB,CAACT,0BAAD,EAAeY,gCAAf,CAAnB,EAAqDV,2BAAgBW,OAArE,E,CACA;;AACAjB,MAAM,UAAN,CAAc,cAAd,EAA8B,CAACI,0BAAD,EAAec,iCAAf,CAA9B,EAAiEZ,2BAAgBa,SAAjF;eAEenB,M","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport express from 'express';\r\nimport multipart from 'connect-multiparty';\r\nimport carsControllers from '../controllers/CarsController';\r\nimport {\r\n  validateCreateAdvert,\r\n  validateUpdateCarStatus,\r\n  validateUpdateCarPrice,\r\n  validateViewACar,\r\n  validateViewCars,\r\n  validateDeleteCar,\r\n} from '../middlewares/CarsMiddleware';\r\nimport authenticate from '../middlewares/AuthMiddleware';\r\n\r\nconst Router = express.Router();\r\nconst multipartMiddleware = multipart();\r\n\r\n// add a car\r\nRouter.post('/car', [authenticate, multipartMiddleware, validateCreateAdvert], carsControllers.addCar);\r\n// update car status\r\nRouter.patch('/car/:car_id/status', [authenticate, validateUpdateCarStatus], carsControllers.updateCarStatus);\r\n// update the price of a car\r\nRouter.patch('/car/:car_id/price', [authenticate, validateUpdateCarPrice], carsControllers.updateCarPrice);\r\n// view a specific car\r\nRouter.get('/car/:car_id', [authenticate, validateViewACar], carsControllers.getSpecificCar);\r\n// get cars\r\nRouter.get('/car', [authenticate, validateViewCars], carsControllers.getCars);\r\n// delete a car\r\nRouter.delete('/car/:car_id', [authenticate, validateDeleteCar], carsControllers.deleteCar);\r\n\r\nexport default Router;\r\n"],"file":"carsRoutes.js"}