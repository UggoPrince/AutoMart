{"version":3,"sources":["../../../../server/middlewares/validators/ValidateUser.js"],"names":["ValidateUser","first_name","last_name","email","password","address","phone_number","refresh","isValidName","isValidAddress","isValidEmail","isValidPhoneNumber","isValidPassword","getErrorMessage","name","field","nameRegExp","isEmptyString","integrateError","test","addRegExp","emailRegExp","passRegExp","telRegExp","Validator"],"mappings":"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","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-useless-constructor */\r\n/* eslint-disable no-control-regex */\r\n/* eslint-disable class-methods-use-ValidateUser */\r\n/* eslint-disable camelcase */\r\nimport Validator from './Validator';\r\n\r\nclass ValidateUser extends Validator {\r\n  static validateSignupFields(first_name, last_name, email, password, address, phone_number) {\r\n    ValidateUser.refresh();\r\n    ValidateUser.isValidName(first_name, 'first_name'); // validate firstname\r\n    ValidateUser.isValidName(last_name, 'last_name'); // validate lastname\r\n    ValidateUser.isValidAddress(address, 'address'); // validate address\r\n    ValidateUser.isValidEmail(email, 'email'); // validate email\r\n    ValidateUser.isValidPhoneNumber(phone_number, 'phone_number'); // validate phone number\r\n    ValidateUser.isValidPassword(password, 'password'); // validate password\r\n    return ValidateUser.getErrorMessage();\r\n  }\r\n\r\n  static validateSigninFields(email, password) {\r\n    ValidateUser.refresh();\r\n    ValidateUser.isValidEmail(email, 'email'); // validate email\r\n    ValidateUser.isValidPassword(password, 'password'); // validate password\r\n    return ValidateUser.getErrorMessage();\r\n  }\r\n\r\n  static isValidName(name, field) {\r\n    const nameRegExp = /^(?=.*[A-Za-z])+\\w+[^_]$/;\r\n    if (ValidateUser.isEmptyString(name)) {\r\n      ValidateUser.integrateError(field, `No ${field} entered.`);\r\n    } else if (!nameRegExp.test(name)) {\r\n      ValidateUser.integrateError(field, `Invalid ${field}.`);\r\n    }\r\n  }\r\n\r\n  static isValidAddress(address, field) {\r\n    const addRegExp = /^[a-zA-Z0-9\\s,.'-]{3,}$/;\r\n    if (ValidateUser.isEmptyString(address)) {\r\n      ValidateUser.integrateError(field, `No ${field} entered.`);\r\n    } else if (!addRegExp.test(address)) {\r\n      ValidateUser.integrateError(field, `Invalid ${field}.`);\r\n    }\r\n  }\r\n\r\n  static isValidEmail(email, field) {\r\n    const emailRegExp = /^(([^<>()\\\\[\\]\\\\.,;:@\"\\x00-\\x20\\x7F]|\\\\.)+|(\"\"\"([^\\x0A\\x0D\"\\\\]|\\\\\\\\)+\"\"\"))@(([a-z]|#\\d+?)([a-z0-9-]|#\\d+?)*([a-z0-9]|#\\d+?)\\.)+([a-z]{2,4})$/i;\r\n    if (ValidateUser.isEmptyString(email)) {\r\n      ValidateUser.integrateError(field, `No ${field} entered.`);\r\n    } else if (!emailRegExp.test(email)) {\r\n      ValidateUser.integrateError(field, `Invalid ${field}.`);\r\n    }\r\n  }\r\n\r\n  static isValidPassword(password, field) {\r\n    const passRegExp = /^(?=.*[A-Za-z])+(?=.*\\d)[A-Za-z\\d]{8,}$/; // /^[A-Za-z]\\w{8,}$/;\r\n    if (ValidateUser.isEmptyString(password)) {\r\n      ValidateUser.integrateError(field, `${field} must have a letter, number and atleast 8 characters long.`);\r\n    } else if (!passRegExp.test(password)) {\r\n      ValidateUser.integrateError(field, `Invalid ${field}. password must have a letter, number and atleast 8 characters long.`);\r\n    }\r\n  }\r\n\r\n  static isValidPhoneNumber(phone_number, field) {\r\n    const telRegExp = /^(\\+\\d{1,3} ?)?(\\(\\d{1,5}\\)|\\d{1,5}) ?\\d{3}?\\d{0,7}( (x|xtn|ext|extn|pax|pbx|extension)?\\.? ?\\d{2-5})?$/i;\r\n    if (!ValidateUser.isEmptyString(phone_number) && !telRegExp.test(phone_number)) {\r\n      ValidateUser.integrateError(field, `Invalid ${field}.`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ValidateUser;\r\n"],"file":"ValidateUser.js"}