{"version":3,"sources":["../../../../server/middlewares/validators/ValidateOrder.js"],"names":["ValidateOrder","car_id","amount","refresh","isValidCarId","isValidAmount","getErrorMessage","price","order_id","isValidOrderId","buyer","isValidBuyer","field","validateInt","validateFloat","id","Validator"],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;;;;;;;;;4CAC2BC,M,EAAQC,M,EAAQ;AAC7CF,MAAAA,aAAa,CAACG,OAAd;AACAH,MAAAA,aAAa,CAACI,YAAd,CAA2BH,MAA3B,EAAmC,QAAnC,EAF6C,CAEC;;AAC9CD,MAAAA,aAAa,CAACK,aAAd,CAA4BH,MAA5B,EAAoC,QAApC,EAH6C,CAGE;;AAC/C,aAAOF,aAAa,CAACM,eAAd,EAAP;AACD;;;8CAEgCC,K,EAAOC,Q,EAAU;AAChDR,MAAAA,aAAa,CAACG,OAAd;AACAH,MAAAA,aAAa,CAACK,aAAd,CAA4BE,KAA5B,EAAmC,OAAnC,EAFgD,CAEH;;AAC7CP,MAAAA,aAAa,CAACS,cAAd,CAA6BD,QAA7B,EAAuC,UAAvC,EAHgD,CAGI;;AACpD,aAAOR,aAAa,CAACM,eAAd,EAAP;AACD;;;6CAE+BI,K,EAAO;AACrCV,MAAAA,aAAa,CAACG,OAAd;AACAH,MAAAA,aAAa,CAACW,YAAd,CAA2BD,KAA3B,EAAkC,OAAlC;AACA,aAAOV,aAAa,CAACM,eAAd,EAAP;AACD;;;iCAEmBL,M,EAAQW,K,EAAO;AACjCZ,MAAAA,aAAa,CAACa,WAAd,CAA0BZ,MAA1B,EAAkCW,KAAlC;AACD;;;kCAEoBV,M,EAAQU,K,EAAO;AAClCZ,MAAAA,aAAa,CAACc,aAAd,CAA4BZ,MAA5B,EAAoCU,KAApC;AACD;;;mCAEqBG,E,EAAIH,K,EAAO;AAC/BZ,MAAAA,aAAa,CAACa,WAAd,CAA0BE,EAA1B,EAA8BH,KAA9B;AACD;;;iCAEmBF,K,EAAOE,K,EAAO;AAChCZ,MAAAA,aAAa,CAACa,WAAd,CAA0BH,KAA1B,EAAiCE,KAAjC;AACD;;;;EAnCyBI,sB;;eAsCbhB,a","sourcesContent":["/* eslint-disable camelcase */\nimport Validator from './Validator';\n\nclass ValidateOrder extends Validator {\n  static validateMakeOrderFields(car_id, amount) {\n    ValidateOrder.refresh();\n    ValidateOrder.isValidCarId(car_id, 'car_id'); // validate car id\n    ValidateOrder.isValidAmount(amount, 'amount'); // validate buyer's price\n    return ValidateOrder.getErrorMessage();\n  }\n\n  static validateUpdateOrderFields(price, order_id) {\n    ValidateOrder.refresh();\n    ValidateOrder.isValidAmount(price, 'price'); // validate the new price that's to update old price\n    ValidateOrder.isValidOrderId(order_id, 'order_id'); // validate the order's id\n    return ValidateOrder.getErrorMessage();\n  }\n\n  static validateGetOrdersOfAUser(buyer) {\n    ValidateOrder.refresh();\n    ValidateOrder.isValidBuyer(buyer, 'buyer');\n    return ValidateOrder.getErrorMessage();\n  }\n\n  static isValidCarId(car_id, field) {\n    ValidateOrder.validateInt(car_id, field);\n  }\n\n  static isValidAmount(amount, field) {\n    ValidateOrder.validateFloat(amount, field);\n  }\n\n  static isValidOrderId(id, field) {\n    ValidateOrder.validateInt(id, field);\n  }\n\n  static isValidBuyer(buyer, field) {\n    ValidateOrder.validateInt(buyer, field);\n  }\n}\n\nexport default ValidateOrder;\n"],"file":"ValidateOrder.js"}