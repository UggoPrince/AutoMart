{"version":3,"sources":["../../../server/middlewares/OrdersMiddleware.js"],"names":["validatePurchaseOrder","req","res","next","body","carId","amount","result","Validator","validateMakeOrderFields","error","status","send","Response","errorMessage","OrderChecker","checkOrderedCar","car","buyer","token","id","carPrice","data","price","validateUpdateOrderPrice","newAmount","orderId","params","order_id","validateUpdateOrderFields","checkId","order"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAEO,IAAMA,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACTF,GAAG,CAACG,IADK,EAC3BC,KAD2B,aAC3BA,KAD2B,EACpBC,MADoB,aACpBA,MADoB;AAE7BC,YAAAA,MAF6B,GAEpBC,0BAAUC,uBAAV,CAAkCJ,KAAlC,EAAyCC,MAAzC,CAFoB;;AAAA,iBAG/BC,MAAM,CAACG,KAHwB;AAAA;AAAA;AAAA;;AAIjCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,0BAAUK,QAAV,EAArB;AAJiC;AAAA;;AAAA;AAM7BH,YAAAA,KAN6B,GAMrB,KANqB;AAO3BI,YAAAA,YAP2B,GAOZ,EAPY;AAAA;AAAA,mBAQfC,yBAAaC,eAAb,CAA6BX,KAA7B,CARe;;AAAA;AAQ3BY,YAAAA,GAR2B;;AASjC,gBAAIA,GAAG,CAACP,KAAR,EAAe;AACbA,cAAAA,KAAK,GAAG,IAAR;AACAI,cAAAA,YAAY,CAACT,KAAb,0BAAqCA,KAArC;AACD;;AACD,gBAAIK,KAAJ,EAAW;AACTR,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,gBAAAA,MAAM,EAAE,GADW;AAEnBD,gBAAAA,KAAK,EAAEI;AAFY,eAArB;AAID,aALD,MAKO;AACLb,cAAAA,GAAG,CAACG,IAAJ,CAASc,KAAT,GAAiBjB,GAAG,CAACkB,KAAJ,CAAUC,EAA3B;AACAnB,cAAAA,GAAG,CAACG,IAAJ,CAASiB,QAAT,GAAoBJ,GAAG,CAACK,IAAJ,CAASC,KAA7B;AACApB,cAAAA,IAAI;AACL;;AAtBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBH,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;;;AA0BA,IAAMwB,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOvB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BsB,YAAAA,SAD8B,GAChBxB,GAAG,CAACG,IADY,CAC9BqB,SAD8B;AAEhCC,YAAAA,OAFgC,GAEtBzB,GAAG,CAAC0B,MAAJ,CAAWC,QAFW;AAGhCrB,YAAAA,MAHgC,GAGvBC,0BAAUqB,yBAAV,CAAoCJ,SAApC,EAA+CC,OAA/C,CAHuB;;AAAA,iBAIlCnB,MAAM,CAACG,KAJ2B;AAAA;AAAA;AAAA;;AAKpCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,0BAAUK,QAAV,EAArB;AALoC;AAAA;;AAAA;AAAA;AAAA,mBAOhBE,yBAAae,OAAb,CAAqBJ,OAArB,CAPgB;;AAAA;AAO9BK,YAAAA,KAP8B;;AAQpC,gBAAIA,KAAK,CAACrB,KAAV,EAAiB;AACfR,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,gBAAAA,MAAM,EAAE,GADW;AAEnBD,gBAAAA,KAAK,2BAAoBgB,OAApB;AAFc,eAArB;AAID,aALD,MAKO;AACLzB,cAAAA,GAAG,CAACG,IAAJ,CAASE,MAAT,GAAkByB,KAAK,CAACT,IAAN,CAAWhB,MAA7B;AACAH,cAAAA,IAAI;AACL;;AAhBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBqB,wBAAwB;AAAA;AAAA;AAAA,GAA9B","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport Validator from './validators/ValidateOrder';\r\nimport OrderChecker from './database_checkers/OrderChecker';\r\n\r\nexport const validatePurchaseOrder = async (req, res, next) => {\r\n  const { carId, amount } = req.body;\r\n  const result = Validator.validateMakeOrderFields(carId, amount);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else {\r\n    let error = false;\r\n    const errorMessage = {};\r\n    const car = await OrderChecker.checkOrderedCar(carId);\r\n    if (car.error) {\r\n      error = true;\r\n      errorMessage.carId = `Car with id (${carId}) does not exist.`;\r\n    }\r\n    if (error) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: errorMessage,\r\n      });\r\n    } else {\r\n      req.body.buyer = req.token.id;\r\n      req.body.carPrice = car.data.price;\r\n      next();\r\n    }\r\n  }\r\n};\r\n\r\nexport const validateUpdateOrderPrice = async (req, res, next) => {\r\n  const { newAmount } = req.body;\r\n  const orderId = req.params.order_id;\r\n  const result = Validator.validateUpdateOrderFields(newAmount, orderId);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else {\r\n    const order = await OrderChecker.checkId(orderId);\r\n    if (order.error) {\r\n      res.status(404).send({\r\n        status: 404,\r\n        error: `Order with id (${orderId}) does not exist.`,\r\n      });\r\n    } else {\r\n      req.body.amount = order.data.amount;\r\n      next();\r\n    }\r\n  }\r\n};\r\n"],"file":"OrdersMiddleware.js"}