{"version":3,"sources":["../../../server/middlewares/CarsMiddleware.js"],"names":["CarsMiddleware","req","res","next","body","state","status","price","title","manufacturer","model","body_type","car_photo","img_url","empty","files","result","Validator","validateCreateAdvertFields","error","send","Response","owner","token","id","email","car_id","params","validateUpdateCarStatusFields","CarChecker","checkId","validatUpdateCarPriceFields","validateViewSpecficCarParams","rQuery","query","qLength","Object","keys","length","isZero","isOne","isTwo","isThree","validateViewUnsoldCarsQuery","validateViewAllCarsOfOwner","userId","parseInt","validateViewUnsoldNewCars","validateViewUnsoldCarsByManufacturer","min_price","max_price","validateViewUnsoldCarsInPriceRange","validateDeleteACarParams","is_admin"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable class-methods-use-this */\nimport Validator from './validators/ValidateCar';\nimport CarChecker from './database_checkers/CarChecker';\nimport { errorInvalidQueryString } from '../helpers/errorHandlers';\n\nclass CarsMiddleware {\n  async validateCreateAdvert(req, res, next) {\n    const {\n      state, status, price, title, manufacturer, model, body_type,\n    } = req.body;\n    let car_photo = {};\n    if (req.body.img_url) car_photo = { empty: false };\n    else if (req.files.img_url) car_photo = { empty: false };\n    else car_photo = { empty: true };\n    const result = Validator.validateCreateAdvertFields(\n      state, status, price, title, manufacturer, model, body_type, car_photo,\n    );\n    if (result.error) {\n      res.status(400).send(Validator.Response());\n    } else {\n      req.body.owner = req.token.id;\n      req.body.email = req.token.email;\n      next();\n    }\n  }\n\n  async validateUpdateCarStatus(req, res, next) {\n    const { car_id } = req.params;\n    const result = Validator.validateUpdateCarStatusFields(car_id, req.body.status);\n    if (result.error) {\n      res.status(400).send(Validator.Response());\n    } else if (!await CarChecker.checkId(car_id)) {\n      res.status(404).send({\n        status: 404,\n        error: `Car with id (${car_id}) does not exist.`,\n      });\n    } else {\n      req.body.email = req.token.email;\n      next();\n    }\n  }\n\n  async validateUpdateCarPrice(req, res, next) {\n    const { price } = req.body;\n    const { car_id } = req.params;\n    const result = Validator.validatUpdateCarPriceFields(car_id, price);\n    if (result.error) {\n      res.status(400).send(Validator.Response());\n    } else if (!await CarChecker.checkId(car_id)) {\n      res.status(404).send({\n        status: 404,\n        error: `Car with id (${car_id}) does not exist.`,\n      });\n    } else {\n      req.body.email = req.token.email;\n      next();\n    }\n  }\n\n  async validateViewACar(req, res, next) {\n    const { car_id } = req.params;\n    const result = Validator.validateViewSpecficCarParams(car_id);\n    if (result.error) {\n      res.status(400).send(Validator.Response());\n    } else if (!await CarChecker.checkId(car_id)) {\n      res.status(404).send({\n        status: 404,\n        error: `Car with id (${car_id}) do not exist.`,\n      });\n    } else {\n      next();\n    }\n  }\n\n  validateViewCars(req, res, next) {\n    const rQuery = req.query;\n    const qLength = Object.keys(req.query).length;\n    const isZero = qLength === 0;\n    const isOne = qLength > 0 && qLength === 1;\n    const isTwo = qLength > 0 && qLength === 2;\n    const isThree = qLength > 0 && qLength === 3;\n    if (isZero) {\n      req.qLength = 0;\n      next();\n    } else if (isOne) {\n      if (rQuery.status) { // getting all available cars\n        const result = Validator.validateViewUnsoldCarsQuery(rQuery.status);\n        if (result.error) {\n          res.status(400).send(Validator.Response());\n        } else {\n          req.qLength = 1;\n          next();\n        }\n      } else if (rQuery.owner) { // getting all cars of a particular owner\n        const result = Validator.validateViewAllCarsOfOwner(rQuery.owner);\n        const userId = parseInt(rQuery.owner, 10);\n        if (result.error) {\n          res.status(400).send(Validator.Response());\n        } else if (userId !== req.token.id) {\n          res.status(400).send({ status: 400, error: 'invalid owner.' });\n        } else {\n          req.qLength = 1;\n          next();\n        }\n      } else {\n        res.status(400).send(errorInvalidQueryString());\n      }\n    } else if (isTwo) {\n      if (rQuery.status && rQuery.state) {\n        const result = Validator.validateViewUnsoldNewCars(rQuery.status, rQuery.state);\n        if (result.error) {\n          res.status(400).send(Validator.Response());\n        } else {\n          req.qLength = 2;\n          next();\n        }\n      } else if (rQuery.status && rQuery.manufacturer) {\n        const result = Validator.validateViewUnsoldCarsByManufacturer(\n          rQuery.status, rQuery.manufacturer,\n        );\n        if (result.error) {\n          res.status(400).send(Validator.Response());\n        } else {\n          req.qLength = 2;\n          next();\n        }\n      } else res.status(400).send(errorInvalidQueryString());\n    } else if (isThree && rQuery.min_price && rQuery.max_price) {\n      const result = Validator.validateViewUnsoldCarsInPriceRange(\n        rQuery.status, rQuery.min_price, rQuery.max_price,\n      );\n      if (result.error) {\n        res.status(400).send(Validator.Response());\n      } else {\n        req.qLength = 3;\n        next();\n      }\n    } else {\n      res.status(400).send(errorInvalidQueryString());\n    }\n  }\n\n  async validateDeleteCar(req, res, next) {\n    const { car_id } = req.params;\n    const result = Validator.validateDeleteACarParams(car_id);\n    if (result.error) {\n      res.status(400).send(Validator.Response());\n    } else if (!req.token.is_admin) {\n      res.status(403).send({\n        status: 403, error: 'You are not an admin. Only admin are allowed to delete an Advert',\n      });\n    } else if (!await CarChecker.checkId(car_id)) {\n      res.status(404).send({ status: 404, error: `Car with id (${car_id}) does not exist.` });\n    } else {\n      next();\n    }\n  }\n}\n\nexport default new CarsMiddleware();\n"],"file":"CarsMiddleware.js"}