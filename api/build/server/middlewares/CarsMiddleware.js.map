{"version":3,"sources":["../../../server/middlewares/CarsMiddleware.js"],"names":["validateCreateAdvert","req","res","next","body","state","status","price","title","manufacturer","model","body_type","console","log","car_photo","img_url","empty","files","result","Validator","validateCreateAdvertFields","error","Response","send","owner","token","id","email","validateUpdateCarStatus","car_id","params","validateUpdateCarStatusFields","CarChecker","checkId","validateUpdateCarPrice","validatUpdateCarPriceFields","validateViewACar","validateViewSpecficCarParams","validateViewCars","rQuery","query","qLength","Object","keys","length","isZero","isOne","isTwo","isThree","validateViewUnsoldCarsQuery","validateViewAllCarsOfOwner","userId","parseInt","validateViewUnsoldNewCars","validateViewUnsoldCarsByManufacturer","min_price","max_price","validateViewUnsoldCarsInPriceRange","validateDeleteCar","validateDeleteACarParams","is_admin"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAG9BF,GAAG,CAACG,IAH0B,EAEhCC,KAFgC,aAEhCA,KAFgC,EAEzBC,MAFyB,aAEzBA,MAFyB,EAEjBC,KAFiB,aAEjBA,KAFiB,EAEVC,KAFU,aAEVA,KAFU,EAEHC,YAFG,aAEHA,YAFG,EAEWC,KAFX,aAEWA,KAFX,EAEkBC,SAFlB,aAEkBA,SAFlB;AAIlCC,YAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACG,IAAhB;AACIU,YAAAA,SAL8B,GAKlB,EALkB;AAMlC,gBAAIb,GAAG,CAACG,IAAJ,CAASW,OAAb,EAAsBD,SAAS,GAAG;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAZ,CAAtB,KACK,IAAIf,GAAG,CAACgB,KAAJ,CAAUF,OAAd,EAAuBD,SAAS,GAAG;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAZ,CAAvB,KACAF,SAAS,GAAG;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAZ;AACCE,YAAAA,MAT4B,GASnBC,wBAAUC,0BAAV,CACbf,KADa,EACNC,MADM,EACEC,KADF,EACSC,KADT,EACgBC,YADhB,EAC8BC,KAD9B,EACqCC,SADrC,EACgDG,SADhD,CATmB;;AAYlC,gBAAII,MAAM,CAACG,KAAX,EAAkB;AAChBT,cAAAA,OAAO,CAACC,GAAR,CAAYM,wBAAUG,QAAV,EAAZ;AACApB,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,aAHD,MAGO;AACLrB,cAAAA,GAAG,CAACG,IAAJ,CAASoB,KAAT,GAAiBvB,GAAG,CAACwB,KAAJ,CAAUC,EAA3B;AACAzB,cAAAA,GAAG,CAACG,IAAJ,CAASuB,KAAT,GAAiB1B,GAAG,CAACwB,KAAJ,CAAUE,KAA3B;AACAxB,cAAAA,IAAI;AACL;;AAnBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBH,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;;;AAsBA,IAAM4B,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAO3B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B0B,YAAAA,MAD6B,GAClB5B,GAAG,CAAC6B,MADc,CAC7BD,MAD6B;AAE/BX,YAAAA,MAF+B,GAEtBC,wBAAUY,6BAAV,CAAwCF,MAAxC,CAFsB;;AAAA,iBAGjCX,MAAM,CAACG,KAH0B;AAAA;AAAA;AAAA;;AAInCnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AAJmC;AAAA;;AAAA;AAAA;AAAA,mBAKnBU,uBAAWC,OAAX,CAAmBJ,MAAnB,CALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,2BAMnCjB,OANmC;AAAA,2BAMvBiB,MANuB;AAAA;AAAA,mBAMTG,uBAAWC,OAAX,CAAmBJ,MAAnB,CANS;;AAAA;AAAA;;AAAA,yBAM3BhB,GAN2B;;AAOnCX,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBjB,cAAAA,MAAM,EAAE,GADW;AAEnBe,cAAAA,KAAK,yBAAkBQ,MAAlB;AAFc,aAArB;AAPmC;AAAA;;AAAA;AAYnC5B,YAAAA,GAAG,CAACG,IAAJ,CAASuB,KAAT,GAAiB1B,GAAG,CAACwB,KAAJ,CAAUE,KAA3B;AACAxB,YAAAA,IAAI;;AAb+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvByB,uBAAuB;AAAA;AAAA;AAAA,GAA7B;;;;AAiBA,IAAMM,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOjC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BI,YAAAA,KAD4B,GAClBN,GAAG,CAACG,IADc,CAC5BG,KAD4B;AAE5BsB,YAAAA,MAF4B,GAEjB5B,GAAG,CAAC6B,MAFa,CAE5BD,MAF4B;AAG9BX,YAAAA,MAH8B,GAGrBC,wBAAUgB,2BAAV,CAAsCN,MAAtC,EAA8CtB,KAA9C,CAHqB;;AAAA,iBAIhCW,MAAM,CAACG,KAJyB;AAAA;AAAA;AAAA;;AAKlCnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AALkC;AAAA;;AAAA;AAAA;AAAA,mBAMlBU,uBAAWC,OAAX,CAAmBJ,MAAnB,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOlC3B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBjB,cAAAA,MAAM,EAAE,GADW;AAEnBe,cAAAA,KAAK,yBAAkBQ,MAAlB;AAFc,aAArB;AAPkC;AAAA;;AAAA;AAYlC5B,YAAAA,GAAG,CAACG,IAAJ,CAASuB,KAAT,GAAiB1B,GAAG,CAACwB,KAAJ,CAAUE,KAA3B;AACAxB,YAAAA,IAAI;;AAb8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtB+B,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;;;AAiBA,IAAME,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOnC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB0B,YAAAA,MADsB,GACX5B,GAAG,CAAC6B,MADO,CACtBD,MADsB;AAExBX,YAAAA,MAFwB,GAEfC,wBAAUkB,4BAAV,CAAuCR,MAAvC,CAFe;;AAAA,iBAG1BX,MAAM,CAACG,KAHmB;AAAA;AAAA;AAAA;;AAI5BnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AAJ4B;AAAA;;AAAA;AAAA;AAAA,mBAKZU,uBAAWC,OAAX,CAAmBJ,MAAnB,CALY;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM5B3B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBjB,cAAAA,MAAM,EAAE,GADW;AAEnBe,cAAAA,KAAK,yBAAkBQ,MAAlB;AAFc,aAArB;AAN4B;AAAA;;AAAA;AAW5B1B,YAAAA,IAAI;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBiC,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;;;AAeA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACrC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClD,MAAMoC,MAAM,GAAGtC,GAAG,CAACuC,KAAnB;AACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY1C,GAAG,CAACuC,KAAhB,EAAuBI,MAAvC;AACA,MAAMC,MAAM,GAAGJ,OAAO,KAAK,CAA3B;AACA,MAAMK,KAAK,GAAGL,OAAO,GAAG,CAAV,IAAeA,OAAO,KAAK,CAAzC;AACA,MAAMM,KAAK,GAAGN,OAAO,GAAG,CAAV,IAAeA,OAAO,KAAK,CAAzC;AACA,MAAMO,OAAO,GAAGP,OAAO,GAAG,CAAV,IAAeA,OAAO,KAAK,CAA3C;;AACA,MAAII,MAAJ,EAAY;AACV5C,IAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,IAAAA,IAAI;AACL,GAHD,MAGO,IAAI2C,KAAJ,EAAW;AAChB,QAAIP,MAAM,CAACjC,MAAX,EAAmB;AAAE;AACnB,UAAMY,MAAM,GAAGC,wBAAU8B,2BAAV,CAAsCV,MAAM,CAACjC,MAA7C,CAAf;;AACA,UAAIY,MAAM,CAACG,KAAX,EAAkB;AAChBnB,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,OAFD,MAEO;AACLrB,QAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,QAAAA,IAAI;AACL;AACF,KARD,MAQO,IAAIoC,MAAM,CAACf,KAAX,EAAkB;AAAE;AACzB,UAAMN,OAAM,GAAGC,wBAAU+B,0BAAV,CAAqCX,MAAM,CAACf,KAA5C,CAAf;;AACA,UAAM2B,MAAM,GAAGC,QAAQ,CAACb,MAAM,CAACf,KAAR,EAAe,EAAf,CAAvB;;AACA,UAAIN,OAAM,CAACG,KAAX,EAAkB;AAChBnB,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,OAFD,MAEO,IAAI6B,MAAM,KAAKlD,GAAG,CAACwB,KAAJ,CAAUC,EAAzB,EAA6B;AAClCxB,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAEjB,UAAAA,MAAM,EAAE,GAAV;AAAee,UAAAA,KAAK,EAAE;AAAtB,SAArB;AACD,OAFM,MAEA;AACLpB,QAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,QAAAA,IAAI;AACL;AACF,KAXM,MAWA;AACLD,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,6CAArB;AACD;AACF,GAvBM,MAuBA,IAAIwB,KAAJ,EAAW;AAChB,QAAIR,MAAM,CAACjC,MAAP,IAAiBiC,MAAM,CAAClC,KAA5B,EAAmC;AACjC,UAAMa,QAAM,GAAGC,wBAAUkC,yBAAV,CAAoCd,MAAM,CAACjC,MAA3C,EAAmDiC,MAAM,CAAClC,KAA1D,CAAf;;AACA,UAAIa,QAAM,CAACG,KAAX,EAAkB;AAChBnB,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,OAFD,MAEO;AACLrB,QAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,QAAAA,IAAI;AACL;AACF,KARD,MAQO,IAAIoC,MAAM,CAACjC,MAAP,IAAiBiC,MAAM,CAAC9B,YAA5B,EAA0C;AAC/C,UAAMS,QAAM,GAAGC,wBAAUmC,oCAAV,CACbf,MAAM,CAACjC,MADM,EACEiC,MAAM,CAAC9B,YADT,CAAf;;AAGA,UAAIS,QAAM,CAACG,KAAX,EAAkB;AAChBnB,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,OAFD,MAEO;AACLrB,QAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,QAAAA,IAAI;AACL;AACF,KAVM,MAUAD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,6CAArB;AACR,GApBM,MAoBA,IAAIyB,OAAO,IAAIT,MAAM,CAACgB,SAAlB,IAA+BhB,MAAM,CAACiB,SAA1C,EAAqD;AAC1D,QAAMtC,QAAM,GAAGC,wBAAUsC,kCAAV,CACblB,MAAM,CAACjC,MADM,EACEiC,MAAM,CAACgB,SADT,EACoBhB,MAAM,CAACiB,SAD3B,CAAf;;AAGA,QAAItC,QAAM,CAACG,KAAX,EAAkB;AAChBnB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AACD,KAFD,MAEO;AACLrB,MAAAA,GAAG,CAACwC,OAAJ,GAAc,CAAd;AACAtC,MAAAA,IAAI;AACL;AACF,GAVM,MAUA;AACLD,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,6CAArB;AACD;AACF,CAlEM;;;;AAoEA,IAAMmC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOzD,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB0B,YAAAA,MADuB,GACZ5B,GAAG,CAAC6B,MADQ,CACvBD,MADuB;AAEzBX,YAAAA,MAFyB,GAEhBC,wBAAUwC,wBAAV,CAAmC9B,MAAnC,CAFgB;;AAAA,iBAG3BX,MAAM,CAACG,KAHoB;AAAA;AAAA;AAAA;;AAI7BnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBJ,wBAAUG,QAAV,EAArB;AAJ6B;AAAA;;AAAA;AAAA,gBAKnBrB,GAAG,CAACwB,KAAJ,CAAUmC,QALS;AAAA;AAAA;AAAA;;AAM7B1D,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBjB,cAAAA,MAAM,EAAE,GADW;AACNe,cAAAA,KAAK,EAAE;AADD,aAArB;AAN6B;AAAA;;AAAA;AAAA;AAAA,mBASbW,uBAAWC,OAAX,CAAmBJ,MAAnB,CATa;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU7B3B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAEjB,cAAAA,MAAM,EAAE,GAAV;AAAee,cAAAA,KAAK,yBAAkBQ,MAAlB;AAApB,aAArB;AAV6B;AAAA;;AAAA;AAY7B1B,YAAAA,IAAI;;AAZyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBuD,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable camelcase */\r\nimport Validator from './validators/ValidateCar';\r\nimport CarChecker from './database_checkers/CarChecker';\r\nimport { errorInvalidQueryString } from '../helpers/errorHandlers';\r\n\r\nexport const validateCreateAdvert = async (req, res, next) => {\r\n  const {\r\n    state, status, price, title, manufacturer, model, body_type,\r\n  } = req.body;\r\n  console.log(req.body);\r\n  let car_photo = {};\r\n  if (req.body.img_url) car_photo = { empty: false };\r\n  else if (req.files.img_url) car_photo = { empty: false };\r\n  else car_photo = { empty: true };\r\n  const result = Validator.validateCreateAdvertFields(\r\n    state, status, price, title, manufacturer, model, body_type, car_photo,\r\n  );\r\n  if (result.error) {\r\n    console.log(Validator.Response());\r\n    res.status(400).send(Validator.Response());\r\n  } else {\r\n    req.body.owner = req.token.id;\r\n    req.body.email = req.token.email;\r\n    next();\r\n  }\r\n};\r\n\r\nexport const validateUpdateCarStatus = async (req, res, next) => {\r\n  const { car_id } = req.params;\r\n  const result = Validator.validateUpdateCarStatusFields(car_id);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else if (!await CarChecker.checkId(car_id)) {\r\n    console.log(car_id, await CarChecker.checkId(car_id));\r\n    res.status(404).send({\r\n      status: 404,\r\n      error: `Car with id (${car_id}) does not exist.`,\r\n    });\r\n  } else {\r\n    req.body.email = req.token.email;\r\n    next();\r\n  }\r\n};\r\n\r\nexport const validateUpdateCarPrice = async (req, res, next) => {\r\n  const { price } = req.body;\r\n  const { car_id } = req.params;\r\n  const result = Validator.validatUpdateCarPriceFields(car_id, price);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else if (!await CarChecker.checkId(car_id)) {\r\n    res.status(404).send({\r\n      status: 404,\r\n      error: `Car with id (${car_id}) does not exist.`,\r\n    });\r\n  } else {\r\n    req.body.email = req.token.email;\r\n    next();\r\n  }\r\n};\r\n\r\nexport const validateViewACar = async (req, res, next) => {\r\n  const { car_id } = req.params;\r\n  const result = Validator.validateViewSpecficCarParams(car_id);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else if (!await CarChecker.checkId(car_id)) {\r\n    res.status(404).send({\r\n      status: 404,\r\n      error: `Car with id (${car_id}) do not exist.`,\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n\r\nexport const validateViewCars = (req, res, next) => {\r\n  const rQuery = req.query;\r\n  const qLength = Object.keys(req.query).length;\r\n  const isZero = qLength === 0;\r\n  const isOne = qLength > 0 && qLength === 1;\r\n  const isTwo = qLength > 0 && qLength === 2;\r\n  const isThree = qLength > 0 && qLength === 3;\r\n  if (isZero) {\r\n    req.qLength = 0;\r\n    next();\r\n  } else if (isOne) {\r\n    if (rQuery.status) { // getting all available cars\r\n      const result = Validator.validateViewUnsoldCarsQuery(rQuery.status);\r\n      if (result.error) {\r\n        res.status(400).send(Validator.Response());\r\n      } else {\r\n        req.qLength = 1;\r\n        next();\r\n      }\r\n    } else if (rQuery.owner) { // getting all cars of a particular owner\r\n      const result = Validator.validateViewAllCarsOfOwner(rQuery.owner);\r\n      const userId = parseInt(rQuery.owner, 10);\r\n      if (result.error) {\r\n        res.status(400).send(Validator.Response());\r\n      } else if (userId !== req.token.id) {\r\n        res.status(400).send({ status: 400, error: 'invalid owner.' });\r\n      } else {\r\n        req.qLength = 1;\r\n        next();\r\n      }\r\n    } else {\r\n      res.status(400).send(errorInvalidQueryString());\r\n    }\r\n  } else if (isTwo) {\r\n    if (rQuery.status && rQuery.state) {\r\n      const result = Validator.validateViewUnsoldNewCars(rQuery.status, rQuery.state);\r\n      if (result.error) {\r\n        res.status(400).send(Validator.Response());\r\n      } else {\r\n        req.qLength = 2;\r\n        next();\r\n      }\r\n    } else if (rQuery.status && rQuery.manufacturer) {\r\n      const result = Validator.validateViewUnsoldCarsByManufacturer(\r\n        rQuery.status, rQuery.manufacturer,\r\n      );\r\n      if (result.error) {\r\n        res.status(400).send(Validator.Response());\r\n      } else {\r\n        req.qLength = 2;\r\n        next();\r\n      }\r\n    } else res.status(400).send(errorInvalidQueryString());\r\n  } else if (isThree && rQuery.min_price && rQuery.max_price) {\r\n    const result = Validator.validateViewUnsoldCarsInPriceRange(\r\n      rQuery.status, rQuery.min_price, rQuery.max_price,\r\n    );\r\n    if (result.error) {\r\n      res.status(400).send(Validator.Response());\r\n    } else {\r\n      req.qLength = 3;\r\n      next();\r\n    }\r\n  } else {\r\n    res.status(400).send(errorInvalidQueryString());\r\n  }\r\n};\r\n\r\nexport const validateDeleteCar = async (req, res, next) => {\r\n  const { car_id } = req.params;\r\n  const result = Validator.validateDeleteACarParams(car_id);\r\n  if (result.error) {\r\n    res.status(400).send(Validator.Response());\r\n  } else if (!req.token.is_admin) {\r\n    res.status(403).send({\r\n      status: 403, error: 'You are not an admin. Only admin are allowed to delete an Advert',\r\n    });\r\n  } else if (!await CarChecker.checkId(car_id)) {\r\n    res.status(404).send({ status: 404, error: `Car with id (${car_id}) does not exist.` });\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n"],"file":"CarsMiddleware.js"}