{"version":3,"sources":["../../../server/helpers/ValidateOrder.js"],"names":["ValidateOrder","buyer","carId","amount","isValidBuyer","isValidCarId","isValidAmount","getErrorMessage","newAmount","orderId","isValidOrderId","field","validateInt","validateFloat","Validator"],"mappings":";;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;AACJ,2BAAc;AAAA;;AAAA;AAEb;;;;4CAEuBC,K,EAAOC,K,EAAOC,M,EAAQ;AAC5C,WAAKC,YAAL,CAAkBH,KAAlB,EAAyB,OAAzB,EAD4C,CACT;;AACnC,WAAKI,YAAL,CAAkBH,KAAlB,EAAyB,OAAzB,EAF4C,CAET;;AACnC,WAAKI,aAAL,CAAmBH,MAAnB,EAA2B,QAA3B,EAH4C,CAGN;;AACtC,aAAO,KAAKI,eAAL,EAAP;AACD;;;8CAEyBC,S,EAAWC,O,EAAS;AAC5C,WAAKH,aAAL,CAAmBE,SAAnB,EAA8B,WAA9B,EAD4C,CACA;;AAC5C,WAAKE,cAAL,CAAoBD,OAApB,EAA6B,SAA7B,EAF4C,CAEH;;AACzC,aAAO,KAAKF,eAAL,EAAP;AACD;;;iCAEYN,K,EAAOU,K,EAAO;AACzB,WAAKC,WAAL,CAAiBX,KAAjB,EAAwBU,KAAxB;AACD;;;iCAEYT,K,EAAOS,K,EAAO;AACzB,WAAKC,WAAL,CAAiBV,KAAjB,EAAwBS,KAAxB;AACD;;;kCAEaR,M,EAAQQ,K,EAAO;AAC3B,WAAKE,aAAL,CAAmBV,MAAnB,EAA2BQ,KAA3B;AACD;;;mCAEcF,O,EAASE,K,EAAO;AAC7B,WAAKC,WAAL,CAAiBH,OAAjB,EAA0BE,KAA1B;AACD;;;;EAhCyBG,sB;;eAmCbd,a","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-useless-constructor */\r\nimport Validator from './Validator';\r\n\r\nclass ValidateOrder extends Validator {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  validateMakeOrderFields(buyer, carId, amount) {\r\n    this.isValidBuyer(buyer, 'buyer'); // validate user id\r\n    this.isValidCarId(carId, 'carId'); // validate car id\r\n    this.isValidAmount(amount, 'amount'); // validate buyer's price\r\n    return this.getErrorMessage();\r\n  }\r\n\r\n  validateUpdateOrderFields(newAmount, orderId) {\r\n    this.isValidAmount(newAmount, 'newAmount'); // validate the new price that's to update old price\r\n    this.isValidOrderId(orderId, 'orderId'); // validate the order's id\r\n    return this.getErrorMessage();\r\n  }\r\n\r\n  isValidBuyer(buyer, field) {\r\n    this.validateInt(buyer, field);\r\n  }\r\n\r\n  isValidCarId(carId, field) {\r\n    this.validateInt(carId, field);\r\n  }\r\n\r\n  isValidAmount(amount, field) {\r\n    this.validateFloat(amount, field);\r\n  }\r\n\r\n  isValidOrderId(orderId, field) {\r\n    this.validateInt(orderId, field);\r\n  }\r\n}\r\n\r\nexport default ValidateOrder;\r\n"],"file":"ValidateOrder.js"}